When would you want to use a remote repository rather than keeping all your work
local?

    A remote repository is useful when you want to share your work with someone else i.e. when you want to make it public.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    You may be working on a feature and pulling changes manually allows you to control when to bring in changes that might potentially conflict with the files you were working on.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    You fork a repository when you want to take somebody's project and then modify it to suit your own needs. If the author accepts, you can even push your changes to his repository, but this is not necessary. You can always continue using your own version of the project.

    You clone a repository when you want a local copy of a project hosted on GitHub. Ideally, you should be cloning a repo that you have edit permissions on, otherwise you can't push your changes to it.

    A fork is nothing but a clone done for you by the server on the server itself.

    You create a branch when you want to work on a new feature without affecting the main project.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It helps you to compare changes and resolve conflicts offline. Once the changes are combined, you can push your changes to the remote server (GitHub), at which point the local copy of the remote is also updated.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
